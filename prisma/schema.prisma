// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.text annotations in model Account below
  // Further reading: 
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model Year {
  id      Int     @id
  updated String
  months  Month[]
}

model Month {
  id         Int    @id @default(autoincrement())
  index      Int
  name       String
  daysCount  Int
  weeksCount Int
  updated    String
  year       Year   @relation(fields: [yearId], references: [id])
  yearId     Int
  dates      Date[]
}

model Date {
  id        Int      @id @default(autoincrement())
  rawDate   DateTime
  date      Int
  dayName   String
  dayIndex  Int
  weekIndex Int
  month     Month    @relation(fields: [monthId], references: [id])
  monthId   Int
  marks     Mark[]
}

model Mark {
  id          Int     @id @default(autoincrement())
  type        String
  summary     String
  description String?
  date        Date    @relation(fields: [dateId], references: [id])
  dateId      Int
}

model Example {
  id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? //@db.Text
  access_token      String? //@db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? //@db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
